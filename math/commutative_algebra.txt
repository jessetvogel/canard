namespace commutative_algebra

# Type definitions
let Ring : Type
let Algebra (R : Ring) : Type
let Module (R : Ring) : Type

# Constructions
let algebra_self (R : Ring) : Algebra R
let module_from_algebra {R : Ring} (A : Algebra R) : Module R
def module_self (R : Ring) := module_from_algebra (algebra_self R)

# Ring properties
let domain field artin_ring noetherian_ring local_ring gorenstein euclidean reduced_ring (R : Ring) : Prop
let ideal (R : Ring) : Type
let maximal_ideal prime_ideal radical_ideal {R : Ring} (I : ideal R) : Prop
let nilradical zero_ideal unit_ideal jacobson_radical (R : Ring) : ideal R

# Theorems
let field_is_domain {R : Ring} (h : field R) : domain R


# Examples
let ZZ QQ RR CC: Ring

let QQIsField : field QQ
let RRIsField : field RR
let CCIsField : field CC

end commutative_algebra

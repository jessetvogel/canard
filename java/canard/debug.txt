let not (P : Prop) : Prop
let modus_tollens {P Q : Prop} (i (p : P) : Q) (nq : not Q) : not P

let Scheme : Type
let affine quasi_compact (X : Scheme) : Prop

let inf_union_spec_QQ : Scheme
let inf_union_spec_QQ_not_quasi_compact : not (quasi_compact inf_union_spec_QQ)

let aff_imp_qcomp {X : Scheme} (h : affine X) : quasi_compact X

search (X : Scheme) (h : not (affine X))
import "../set_theory/set.cnd"
open set_theory.set

namespace topology
namespace top
    -- The type of topological spaces.
    let Top : Type 
    -- The underlying set of the topological space.
    let to_set (X : Top) : Set
    -- A topological space is empty if it has no points.
    let empty (X : Top) : Prop
    -- A topological space $X$ is connected if the only subsets of $X$ that are both open and closed are $\varnothing$ and $X$ itself.
    let connected (X : Top) : Prop
    -- A topological space $X$ is path-connected if for every two points $x, y \in X$ there exists a path $\gamma : [0, 1] \to X$ (continuous function) such that $\gamma(0) = x$ and $\gamma(1) = y$.
    let path_connected (X : Top) : Prop
    -- A topological space $X$ is compact if it is quasi-compact and Hausdorff.
    let compact (X : Top) : Prop
    -- A topological space $X$ is quasi-compact if every open cover of $X$ has a finite subcover.
    let quasi_compact (X : Top) : Prop
    -- A topological space $X$ is Hausdorff if for every two points $x, y \in X$ there exists disjoint open subsets $U, V \subset X$ with $x \in U$ and $y \in V$.
    let hausdorff (X : Top) : Prop
end top
open topology.top

let open_map closed_map proper compact_map quasi_compact_map dense galois_cover {X Y : Top} (f : Morphism X Y) : Prop
let homeomorphism {X Y : Top} (f : Morphism X Y) := isomorphism f

end topology

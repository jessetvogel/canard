import "../set_theory/set.cnd"

open set_theory
open set_theory.set

namespace group_theory.group

-- The type of groups.
let Group : Type
-- The underlying set of a group.
let to_set (G : Group) : Set
-- A group is trivial if it has one element.
let trivial (G : Group) : Prop
-- A group is abelian if $xy = yx$ for all $x, y \in G$.
let abelian (G : Group) : Prop
/- A group $G$ is solvable if there exist subgroups $H_0, H_1, \ldots, H_r$ of $G$ such that
\[ G = H_0 \supset H_1 \supset \cdots \supset H_r = \{ 1 \} \]
where $H_{i + 1}$ is normal in $H_i$ and $H_i / H_{i + 1}$ is abelian. -/
let solvable (G : Group) : Prop
/- A group $G$ is supersolvable if there exist subgroups $H_0, H_1, \ldots, H_r$ of $G$ such that
\[ G = H_0 \supset H_1 \supset \cdots \supset H_r = \{ 1 \} \]
where $H_{i + 1}$ is normal in $H_i$ and $H_i / H_{i + 1}$ is cyclic. -/
let supersolvable (G : Group) : Prop
let finitely_generated (G : Group) : Prop
-- A group is a torsion group if every element has finite order.
let torsion (G : Group) : Prop
-- A group $G$ is simple if its only normal subgroups are $\{ 1 \}$ and $G$ itself.
let simple (G : Group) : Prop
-- A group is cyclic if it can be generated by a single element.
let cyclic (G : Group) : Prop
-- A group is finite if its underlying set is finite.
let finite (G : Group) := set.finite (to_set G)
-- A group is perfect if it is equal to its own commutator subgroup.
let perfect (G : Group) : Prop
-- The product of two groups $G$ and $H$ is the group $G \times H$.
let product (G H : Group) : Group -- TODO (replace using category_theory)

namespace map

let to_set {G H : Group} (f : Morphism G H) : Morphism (to_set G) (to_set H)

end map

-- The type of subgroups of a group G.
structure Subgroup (G : Group) := {
    group : Group,
    map : Morphism group G,
    mono : set.map.injective (map.to_set map)
}

-- Every group is a subgroup of itself
let subgroup_self (G : Group) := Subgroup G {
    group := G,
    map := id G,
    mono : set.map.injective (map.to_set map)
}

-- A subgroup $H \subset G$ is normal if $gHg^{-1} = H$ for all $g \in G$.
let normal {G : Group} (H : Subgroup G) : Prop
-- A subgroup $H \subset G$ is central if it lies in the center of $G$.
let central {G : Group} (H : Subgroup G) : Prop
/- Let $G$ be a group. A subgroup $H \subset G$ is ascendant if there exists a chain of subgroups
\[ H = H_0 \subset H_1 \subset \cdots \subset G \]
such that $G = \bigcup_{i \ge 0} H_i$ and $H_{i − 1}$​ is normal in $H_i$​ for all $i = 1, \ldots, n. -/
let ascendant {G : Group} (H : Subgroup G) : Prop
/- Let $G$ be a group. A subgroup $H \subset G$ is subnormal if there exists a finite chain of subgroups
\[ H = H_0 \subset H_1 \subset \cdots \subset H_n = G \]
such that $H_{i − 1}$​ is normal in $H_i$​ for all $i = 1, \ldots, n. -/
let subnormal {G : Group} (H : Subgroup G) : Prop
-- The commutator subgroup of a group $G$ is [TODO]
let derived_subgroup (G : Group) : Subgroup G
-- The center of a group $G$ is the subgroup $Z(G) = \{ x \in G \mid xy = yx \textup{ for all } y \in G \}$.
let center (G : Group) : Subgroup G
-- A group $G$ is centerless if its center is trivial.
let centerless (G : Group) := trivial (center.group G)
-- Whenever $N \subset G$ is a normal subgroup, one can form the quotient group $G/N$.
let quotient {G : Group} {N : Subgroup G} (h : normal N) : Group

end group_theory.group

namespace commutative_algebra

-- The type of rings.
let Ring : Type
-- The type of algebras over a given ring $R$.
let Algebra (R : Ring) : Type -- Although actually, can we define an Algebra as a `Morphism R _` ?
-- The type of modules over a given ring $R$.
let Module (R : Ring) : Type

let algebra_of_ring_morphism {R S : Ring} (f : Morphism R S) : Algebra R
def algebra_self (R : Ring) := algebra_of_ring_morphism (id R)
let module_of_ring_morphism {R S : Ring} (f : Morphism R S) : Module R
let module_of_algebra {R : Ring} (A : Algebra R) : Module R
def module_self (R : Ring) := module_of_ring_morphism (id R)

namespace ring
    -- A ring $R$ is a domain if it has no zero-divisors. That is, $ab = 0$ implies $a = 0$ or $b = 0$ for all $a, b \in R$.
    let domain (R : Ring) : Prop
    -- A ring $R$ is a field if every non-zero element is invertible.
    let field (R : Ring) : Prop
    /- A ring $R$ is artin if it satsifies the descending chain condition: for any decreasing sequence of ideals
    \[ I_1 \supset I_2 \supset I_3 \supset \cdots \]
    there exists some $N \in \NN$ such that $I_n = I_N$ for all $n \ge N$. -/
    let artin (R : Ring) : Prop
    /- A ring $R$ is noetherian if it satisfies the ascending chain condition: for any increasing sequence of ideals
    \[ I_1 \subset I_2 \subset I_3 \subset \cdots \]
    there exists $N \in \NN$ such that $I_n = I_N$ for any $n \ge N$.
    Equivalently, $R$ is noetherian if all its ideals are finitely generated. -/
    let noetherian (R : Ring) : Prop
    let local (R : Ring) : Prop
    let gorenstein (R : Ring) : Prop
    let euclidean (R : Ring) : Prop
    -- A ring is reduced if it has no non-zero nilpotent elements.
    let reduced (R : Ring) : Prop
    let valuation (R : Ring) : Prop
    let dvr (R : Ring) : Prop
    -- A ring is finite if it contains finitely many elements.
    let finite (R : Ring) : Prop
    let dedekind (R : Ring) : Prop
    -- A ring $R$ is integrally closed if it contains all elements in its field of fraction that are integral over $R$.
    let integrally_closed (R : Ring) : Prop
    let ufd (R : Ring) : Prop
    -- A ring $R$ is a PID if every ideal in $R$ is of the form $(x)$ for an element $x \in R$.
    let pid (R : Ring) : Prop
    let jacobson (R : Ring) : Prop
    let complete (R : Ring) : Prop
    let excellent (R : Ring) : Prop
    let ideal (R : Ring) : Type -- define as a submodule of module_self R ? 
    -- An ideal $I$ of a ring $R$ is maximal if $I \ne R$ and if $I \subset J \subsetneq R$ implies $I = J$ for any other ideal $J \subset R$.
    let maximal_ideal {R : Ring} (I : ideal R) : Prop
    -- An ideal $I$ of a ring $R$ is prime if $I \ne R$ and $xy \in I$ implies $a \in I$ or $b \in I$.
    let prime_ideal {R : Ring} (I : ideal R) : Prop
    -- An ideal $I$ of a ring $R$ is radical if $x^n \in I$ for some $x \in R$ and $n \ge 1$ implies $x \in I$.
    let radical_ideal {R : Ring} (I : ideal R) : Prop
    let nilradical zero_ideal unit_ideal jacobson_radical (R : Ring) : ideal R
end ring

-- Module properties
namespace module
    let flat free faithful injective projective simple cyclic finitely_generated {R : Ring} (M : Module R) : Prop
end module

end commutative_algebra

import "theorems.cnd"
import "examples.cnd"
